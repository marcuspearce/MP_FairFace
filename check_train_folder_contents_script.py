# -*- coding: utf-8 -*-
"""Check_Train_Folder_Contents_Script.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e5v67cS95JGvKsjinNzVDGIgwx3KnvwC
"""

# Script to check train_folder for which files are not included since there were corruptions -> to download and get complete folder for training
  # RUN ON GOOGLE COLAB 
  # basically creates dict for all names expected, and prints out the files that are not found
  # https://developers.google.com/drive/api/v3/search-files#python 
  # https://colab.research.google.com/drive/1-Z01UK2fGo_05Les1ecKyX3Y5uxhtmgi
  # https://stackoverflow.com/questions/56857760/list-of-files-in-a-google-drive-folder-with-python

import pandas as pd

# authenticate
from google.colab import auth
auth.authenticate_user()

# construct Drive API client
from googleapiclient.discovery import build
drive_service = build('drive', 'v3')

# To add your own Drive Run this cell.
from google.colab import drive
drive.mount('/content/drive')

train_labels = pd.read_csv("/content/drive/My Drive/UCLA Drive/AI Projects/MP_FairFace/fairface_label_train.csv")
# train_labels = pd.read_csv("/content/drive/My Drive/UCLA Drive/AI Projects/MP_FairFace/fairface_label_val.csv")

data_path = '/content/drive/My Drive/UCLA Drive/AI Projects/MP_FairFace/'

num_train_data = len(train_labels)
print(num_train_data)

# Create dict to check if file occurs, w/ all names of files in folder, key->value = name->0 
  # set value to 1 when found
dict_names = {}
for i in range(1, num_train_data+1):
  fileName = str(i) + ".jpg"
  # print(fileName)
  dict_names[fileName] = 0

# print(len(dict_names))

# folder_to_search = 'val'
folder_to_search = 'train_FairFace'

query = "mimeType = 'application/vnd.google-apps.folder' and name='%s'" % folder_to_search

page_token = None
# Get the folder id we want using drive API
response = drive_service.files().list(q= query,
                                          spaces='drive',
                                          fields='nextPageToken, files(id, name)',
                                          pageToken=page_token).execute()
folderIDResult = response.get('files', [])
# only one folder w/ this name, so directly get the id
folderID = folderIDResult[0].get('id')
print(folderID)

# using folderID, get all files from that given folder -> use PageToken since default max query is 100
page_token = None
# i = 0

print("Processing Data...")
while True:
  query = "'%s' in parents" % folderID
  response = drive_service.files().list(q= query,
                                            spaces='drive',
                                            fields='nextPageToken, files(id, name)',
                                            pageToken=page_token).execute()
  for file in response.get('files', []):
    dict_names[file.get('name')] = 1

  page_token = response.get('nextPageToken', None)
  if page_token is None:
    break

print("Done!")


print("Expected Files that were not found:")

for entry in dict_names:
  if dict_names[entry] == 0:
    print(entry)
  
  # print(i)
  # i = i+1

  # print(folder_items)
  # print(len(folder_items))

